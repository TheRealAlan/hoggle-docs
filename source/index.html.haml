---
title: Hoggle Demo
---

%section.container

  .row.margin-top-6>
    .col.small-1of1.center>
      %h1 Hoggle
      %h2 Another grid? Why?

  .row.margin-bottom-3>
    .col.medium-1of2.medium-offset-1of4>

      :markdown

        I’ve used a lot of grid systems - Bootstrap, Foundation, Bourbon’s Neat - and all of them are just too much. I wanted a reusable grid that was simple, lightweight, and unobtrusive. I also wanted responsive flexibility that I didn’t get with other grid systems, as well as the ability to easily vertically center elements. Most other grid systems are float based. Hoggle is inline-block based.

%section.container

  .row.margin-top-6>
    .col.small-1of1.center>
      %h1 Columns

  .row.margin-bottom-3>
    .col.medium-1of2.medium-offset-1of4>

      :markdown

        Columns are wrapped in a `.row` class. Rows can be wrapped in a `.container` class to limit and center the width of the columns to the maximum column width for the screen size.

        Columns are defined with the class `.col` and any combination of classes determining the width at different screen sizes. By default, these are `.x-small-*`, `.small-*`, `.medium-*`, `.large-*`, and `.x-large-*`. This means the column will fill the column space from the specified screen size up. Different column sizes can be set for different screen sizes.

        The default breakpoints are set as follows:

      :code
        # lang: scss

        $x_small: 0px;
        $small: 480px;
        $medium: 768px;
        $large: 992px;
        $x_large: 1200px;

      :markdown

        The `.col` width is determined by the suffix of the class names. The default available sizes are halves, thirds, quarters, and eighths.

  .row.visible-grid>
    .col.medium-1of1.margin-bottom-3>
      .content.center>
        %p.code .medium-1of1

  .row.visible-grid>
    .col.medium-1of2.margin-bottom-3>
      .content.center>
        %p.code .medium-1of2
    .col.medium-1of2.margin-bottom-3>
      .content.center>
        %p.code .medium-1of2

  .row.visible-grid>
    .col.medium-1of3.margin-bottom-3>
      .content.center>
        %p.code .medium-1of3
    .col.medium-2of3.margin-bottom-3>
      .content.center>
        %p.code .medium-2of3

  .row.visible-grid>
    .col.medium-1of4.margin-bottom-3>
      .content.center>
        %p.code .medium-1of4
    .col.medium-3of4.margin-bottom-3>
      .content.center>
        %p.code .medium-3of4

  .row.visible-grid>
    .col.medium-3of8.margin-bottom-3>
      .content.center>
        %p.code .medium-3of8
    .col.medium-5of8.margin-bottom-3>
      .content.center>
        %p.code .medium-5of8

  .row.visible-grid>
    .col.medium-7of8.margin-bottom-3>
      .content.center>
        %p.code .medium-7of8
    .col.medium-1of8.margin-bottom-3>
      .content.center>
        %p.code .medium-1of8


%section.container

  .row.margin-top-6>
    .col.small-1of1.center>
      %h1 Different Columns, Different Sizes

  .row.visible-grid>
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2
    .col.large-1of8.medium-1of4.small-1of2.margin-bottom-3>
      .content.center>
        %p.code .large-1of8
        %p.code .medium-1of4
        %p.code .small-1of2

%section.container

  .row.margin-top-6>
    .col.small-1of1.center>
      %h1 Offsets

  .row.margin-bottom-3.visible-grid>
    .col.small-offset-1of2.small-1of2>
      .content.center
        %span.code .small-offset-1of2

  .row.margin-bottom-3.visible-grid>
    .col.small-offset-1of3.small-1of3>
      .content.center
        %span.code .small-offset-1of3

  .row.margin-bottom-3.visible-grid>
    .col.small-offset-1of4.small-1of4>
      .content.center
        %span.code .small-offset-1of4

  .row.margin-bottom-3.visible-grid>
    .col.small-offset-1of8.small-1of8>
      .content.center
        %span.code .small-offset-1of8

%section.container

  .row.margin-top-6
    .col.small-1of1.center
      %h1 Hide / Show Utilities

  .row.margin-bottom-6
    .col.medium-1of2.medium-offset-1of4>
      :markdown

        There are classes for each size to hide and show elements that are appropriate. Just remember that they're still rendered, just visibly hidden. It won’t stop images from loading.

  .row.margin-bottom-3.visible-grid.show-x-large>
    .col.middle.center>
      %p.code .show-x-large

  .row.margin-bottom-3.visible-grid.show-large>
    .col.middle.center>
      %p.code .show-large

  .row.margin-bottom-3.visible-grid.show-medium>
    .col.middle.center>
      %p.code .show-medium

  .row.margin-bottom-3.visible-grid.show-small>
    .col.middle.center>
      %p.code .show-small

  .row.margin-bottom-3.visible-grid.show-x-small>
    .col.middle.center>
      %p.code .show-x-small

  .row.margin-bottom-3.visible-grid.hide-x-large>
    .col.middle.center>
      %p.code .hide-x-large

  .row.margin-bottom-3.visible-grid.hide-large>
    .col.middle.center>
      %p.code .hide-large

  .row.margin-bottom-3.visible-grid.hide-medium>
    .col.middle.center>
      %p.code .hide-medium

  .row.margin-bottom-3.visible-grid.hide-small>
    .col.middle.center>
      %p.code .hide-small

  .row.margin-bottom-3.visible-grid.hide-x-small>
    .col.middle.center>
      %p.code .hide-x-small

%section.container
  .row.margin-v-6>
    .col.small-1of1.center>
      %h1 Vertical Centering

  .row.margin-v-6>
    .col.middle.medium-1of3>
      %figure
        = image_tag 'hoggle.jpg'

    .col.middle.medium-2of3>
      :markdown

        ## Vertically Centered Content

        Vertically center content with `.middle`.

        Vertical centering works because the columns are set to `inline-block`. This tends to be problematic because of whitespace that gets created between tags when the page is rendered. If you’re using HAML, you can easily eliminate whitespace by placeing a `>` at the end of the `.row` and column tags. If you’re writing plain html, a workaround is to place the opening and closing tags together, like `</div><div>`.

        Content can be aligned to the bottom by using `.bottom` as well.

%section.container
  .row.margin-top-6>
    .col.small-1of1.center>
      %h1 Swapping Columns

  .row.margin-v-6.swap>
    .col.middle.medium-1of3>
      %figure
        = image_tag 'hoggle.jpg'

    .col.middle.medium-2of3>
      :markdown
        ## Swapped Columns

        Swap column layout with <code class="code">.swap</code>. The order will stack correctly at phone sizes.

%section.container
  .row.margin-top-6>
    .col.small-1of1.center>
      %h1 Padding & Margin Helpers

  .row.margin-bottom-6>
    .col.medium-1of2.medium-offset-1of4>
      :markdown

        Padding and margin can be added with classes that are multiples of `$base` up to 6, which by default are 6px. For example, `.pad-3` would result in 18px of padding on all four sides. There are separate classes for direction as well. For top and bottom, `.pad-v-*`, and for left and right, `.pad-h-*`. Add padding to just one side using `.pad-top-*`, `.pad-right-*`, `.pad-bottom-*`, and `.pad-left-*`.

  .row.visible-grid.margin-bottom-3>
    .col.center.medium-1of2.medium-offset-1of4.pad-3>
      %span.code .pad-3

  .row.visible-grid.margin-bottom-3>
    .col.center.medium-1of2.medium-offset-1of4.pad-v-3>
      %span.code .pad-v-3

  .row.visible-grid.margin-bottom-3>
    .col.center.medium-1of2.medium-offset-1of4.pad-h-3>
      %span.code .pad-h-3

%section.container
  .row.margin-top-6>
    .col.small-1of1.center>
      %h1 Responsive Padding & Margin Helpers

  .row.margin-bottom-6>
    .col.medium-1of2.medium-offset-1of4>
      :markdown

        Often there’s a need for changing margin and padding for different screen sizes. The margin and padding classes can also be set with screen size prefixes, just like the column widths. For example, `.x-small-margin-bottom-3` will only add 18px of margin when the columns are stacked on a phone.

